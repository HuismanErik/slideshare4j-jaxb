<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright 2010 Rajendra Patil
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project name="slideshare4j-jaxb" default="jar" basedir=".">
	<property file="build.properties"/>
    <target name="clean">
        <delete dir="${build.dir}" quiet="true"/>
    </target>

    <target name="init" depends="clean">
        <mkdir dir="${build.dir}"/>
    </target>

    <path id="compile.classpath">
      <pathelement location="${build.dir}/classes" />
      <pathelement location="${build.dir}/tests" />
    </path>

    <target name="compile" depends="init">
        <mkdir dir="${build.dir}/classes"/>
        <javac srcdir="${src.dir}"
               destdir="${build.dir}/classes"
               includes="**/*.java"
               deprecation="off"
               debug="on"
               source="1.5"
                   target="1.5">
             <classpath refid="compile.classpath">
            </classpath>
        </javac>
        <copy todir="${build.dir}/classes/com/googlecode/slideshare4j/test/mocks/resources">
            <fileset dir="${test.dir}/com/googlecode/slideshare4j/test/mocks/resources">
                <include name="*.xml"/>
            </fileset>
        </copy>
    </target>

    <target name="compileTests" depends="compile">
        <mkdir dir="${build.dir}/tests"/>
        <javac srcdir="${test.dir}"
               destdir="${build.dir}/tests"
               includes="**/*.java"
               deprecation="off"
               debug="on"
               source="1.5"
                   target="1.5">
            <classpath refid="compile.classpath">
            </classpath>
        </javac>
    </target>

    <target name="test" depends="compileTests">
        <junit fork="yes" haltonfailure="yes">
            <test name="com.googlecode.slideshare4j.test.SlideshareAPITest" />
            <formatter type="plain" usefile="false" />
            <classpath refid="compile.classpath" />
        </junit>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${build.dir}/jar"/>
        <copy todir="${build.dir}/jar">
            <fileset dir="${build.dir}/classes" includes="**/*.class"/>
        </copy>
        <jar destfile="${build.dir}/${jar.name}" basedir="${build.dir}/jar"/>
    </target>

    <target name="javadoc" depends="compile">
            <delete dir="${doc.dir}" quiet="true"/>
            <mkdir dir="${doc.dir}" />
        <javadoc packagenames="com.googlecode.slideshare4j.*"
                 destdir="${doc.dir}"
                 author="true"
                 private="false"
                 version="true">
            <classpath>
            </classpath>
            <sourcepath>
                <pathelement path="${src.dir}" />
          </sourcepath>
        </javadoc>
    </target>

    <target name="dist" depends="jar,javadoc">
        <mkdir dir="${build.dir}/${dist.package.name}"/>
        <mkdir dir="${build.dir}/${dist.package.name}/build"/>
        <copy file="${build.dir}/${jar.name}" todir="${build.dir}/${dist.package.name}/build"/>
        <copy todir="${build.dir}/${dist.package.name}">
            <fileset dir=".">
                <include name="build.properties"/>
                <include name="build.xml"/>
            	<include name="${meta-inf.dir}/*"/>
                <include name="doc/**/*"/>
                <include name="src/**/*"/>
                <exclude name="**/.svn"/>
            </fileset>
        </copy>
        <zip destfile="${build.dir}/${dist.package.name}-src.zip"
             basedir="${build.dir}"
             includes="${dist.package.name}/**/*"/>
    </target>

</project>